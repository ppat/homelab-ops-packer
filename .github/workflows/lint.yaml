---
# yamllint disable rule:line-length
name: Lint all

# yamllint disable-line rule:truthy
on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        fetch-depth: 1

    - name: Determine what files types have changed
      id: changed-files-yaml
      uses: tj-actions/changed-files@c65cd883420fd2eb864698a825fc4162dd94482c # v44
      with:
        files_yaml: |
          actions:
          - .github/workflows/**
          - .shellcheckrc
          renovate:
          - .github/renovate.json
          ansible:
          - '**.yaml'
          - '!.github/**'
          - '!.pre-commit-config.yaml'
          packer:
          - '**.pkr.hcl'

    - name: Set up python
      uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt

    - name: Set up node
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Cache pre-commit hooks
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
      with:
        path: ~/.cache/pre-commit/
        key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install python requirements
      run: python -m pip install -r requirements.txt

    - name: Install node packages
      run: npm ci --no-fund --no-audit

    - name: Install pre-commit hooks
      run: pre-commit install --install-hooks --hook-type pre-commit

    - name: Install packer
      if: steps.changed-files-yaml.outputs.packer_any_changed == 'true' || github.event_name == 'workflow_dispatch'
      env:
        # renovate: datasource=github-releases depName=hashicorp/packer
        PACKER_VERSION: "1.11.0"
      run: |
        [[ "$RUNNER_ARCH" == "ARM64" ]] && export PKG_ARCH=arm64 || export PKG_ARCH=amd64
        wget --progress=dot:giga -c https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_${PKG_ARCH}.zip -O /tmp/packer.zip
        unzip /tmp/packer.zip
        sudo install -o root -g root -m 0755 /tmp/packer /usr/local/sbin/packer
      working-directory: /tmp

    - name: check-added-large-files
      run: pre-commit run --all-files --color=always check-added-large-files

    - name: check-executables-have-shebangs
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-executables-have-shebangs

    - name: check-json
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-json

    - name: check-shebang-scripts-are-executable
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-shebang-scripts-are-executable

    - name: detect-private-key
      if: success() || failure()
      run: pre-commit run --all-files --color=always detect-private-key

    - name: end-of-file-fixer
      if: success() || failure()
      run: pre-commit run --all-files --color=always end-of-file-fixer

    - name: forbid-new-submodules
      if: success() || failure()
      run: pre-commit run --all-files --color=always forbid-new-submodules

    - name: mixed-line-ending
      if: success() || failure()
      run: pre-commit run --all-files --color=always mixed-line-ending

    - name: trailing-whitespace
      if: success() || failure()
      run: pre-commit run --all-files --color=always trailing-whitespace

    - name: shellcheck
      if: success() || failure()
      run: pre-commit run --all-files --color=always shellcheck

    - name: yamllint
      if: success() || failure()
      run: yamllint -c .yamllint --strict --format github .

    - name: packer-fmt
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.packer_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      run: |
        packer fmt -recursive -check .

    - name: packer-validate
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.packer_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      run: |
        pre-commit run --all-files packer-validate

    - name: actionlint
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.actions_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      shell: bash
      run: |
        [[ "$RUNNER_ARCH" == "ARM64" ]] && export PKG_ARCH=arm64 || export PKG_ARCH=amd64
        wget --quiet -c https://github.com/rhysd/actionlint/releases/download/v${ACTIONLINT_VERSION}/actionlint_${ACTIONLINT_VERSION}_linux_${PKG_ARCH}.tar.gz -O /tmp/actionlint.tar.gz
        tar -xzf /tmp/actionlint.tar.gz -C /tmp
        sudo install -o root -g root -m 0755 /tmp/actionlint /usr/local/sbin/actionlint
        set -x
        actionlint -shellcheck "shellcheck -c .shellcheckrc"
      env:
        # renovate: datasource=github-releases depName=rhysd/actionlint
        ACTIONLINT_VERSION: "1.7.1"

    - name: commitlint
      if: (success() || failure()) && (github.event_name == 'pull_request')
      run: npx commitlint --color --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

    - name: validate-renovate-config
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.renovate_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      shell: bash
      run: |
        npm install --no-fund --no-audit renovate
        npx --yes --package renovate -- renovate-config-validator

    - name: ansible-lint
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.ansible_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      env:
        changes_output: ${{ toJson(steps.changed-files-yaml.outputs) }}
      run: |
        ansible-lint -c .ansible-lint -i .ansible-lint-ignore --skip-list=yaml --force-color .
