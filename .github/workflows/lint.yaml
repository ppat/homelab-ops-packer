---
# yamllint disable rule:line-length
name: lint

# yamllint disable-line rule:truthy
on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  detect-changes:
    uses: ppat/github-workflows/.github/workflows/detect-changed-files.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      # yamllint disable-line rule:indentation
      files_yaml: |
        actions:
        - .github/workflows/**
        ansible:
        - '**.yaml'
        - '**.yml'
        - '**.j2'
        - '!.github/**'
        - '!.markdownlint-cli2.yaml'
        - '!.pre-commit-config.yaml'
        - '.ansible-lint'
        markdown:
        - '**.md'
        packer:
        - '**.pkr.hcl'
        renovate:
        - .github/renovate.json
        - .github/renovate/**
        shellscripts:
        - '**.sh'
        yaml:
        - '**.yaml'
      git_ref: ${{ github.head_ref || github.ref }}

  commit-messages:
    if: ${{ github.event_name == 'pull_request' }}
    uses: ppat/github-workflows/.github/workflows/lint-commit-messages.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      git_ref: ${{ github.head_ref }}
      fetch_depth: ${{ github.event.pull_request.commits || 0 }}
      from: ${{ github.event.pull_request.head.sha || 'HEAD' }}~${{ github.event.pull_request.commits || '1' }}
      to: ${{ github.event.pull_request.head.sha || 'HEAD' }}

  github-actions:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).actions_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-github-actions.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).actions_all_changed_files }}

  markdown:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).markdown_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-markdown.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).markdown_all_changed_files }}

  pre-commit:
    uses: ppat/github-workflows/.github/workflows/lint-pre-commit.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}

  renovate-config-check:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).renovate_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-renovate-config-check.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).renovate_all_changed_files }}

  shellcheck:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).shellscripts_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-shellcheck.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).shellscripts_all_changed_files }}

  yaml:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).yaml_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-yaml.yaml@729783ba18d0882b4ee32d5fd5c0079028473207 # v2.0.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).yaml_all_changed_files }}

  ansible-lint:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).ansible_any_changed == 'true' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      with:
        fetch-depth: 1
        persist-credentials: false

    - name: Set up python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: '3.13'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt

    - name: Install python requirements
      run: python -m pip install -r requirements.txt

    - name: ansible-lint
      run: |
        ansible-lint -c .ansible-lint -i .ansible-lint-ignore --skip-list=yaml --force-color .

  packer:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).packer_any_changed == 'true' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      with:
        fetch-depth: 1
        persist-credentials: false

    - name: Install packer
      env:
        # renovate: datasource=github-releases depName=hashicorp/packer
        PACKER_VERSION: "1.12.0"
      run: |
        wget --progress=dot:giga -c https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip -O /tmp/packer.zip
        unzip /tmp/packer.zip
        sudo install -o root -g root -m 0755 /tmp/packer /usr/local/sbin/packer
      working-directory: /tmp

    - name: packer-fmt
      run: |
        packer fmt -recursive -check .

    - name: Set up python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: '3.13'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt

    - name: Cache pre-commit hooks
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
      with:
        path: ~/.cache/pre-commit/
        key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install python requirements
      run: python -m pip install -r requirements.txt

    - name: Install pre-commit hooks
      run: pre-commit install --install-hooks --hook-type pre-commit

    - name: packer-validate
      run: |
        pre-commit run --all-files packer-validate
