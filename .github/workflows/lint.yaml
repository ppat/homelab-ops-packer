---
# yamllint disable rule:line-length
name: lint

# yamllint disable-line rule:truthy
on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  detect-changes:
    outputs:
      actions_any_changed: ${{ steps.changed-files-yaml.outputs.actions_any_changed }}
      actions_all_changed_files: ${{ steps.changed-files-yaml.outputs.actions_all_changed_files}}
      ansible_any_changed: ${{ steps.changed-files-yaml.outputs.ansible_any_changed }}
      ansible_all_changed_files: ${{ steps.changed-files-yaml.outputs.ansible_all_changed_files}}
      packer_any_changed: ${{ steps.changed-files-yaml.outputs.packer_any_changed }}
      packer_all_changed_files: ${{ steps.changed-files-yaml.outputs.packer_all_changed_files}}
      renovate_any_changed: ${{ steps.changed-files-yaml.outputs.renovate_any_changed }}
      renovate_all_changed_files: ${{ steps.changed-files-yaml.outputs.renovate_all_changed_files}}
      shellscripts_any_changed: ${{ steps.changed-files-yaml.outputs.shellscripts_any_changed }}
      shellscripts_all_changed_files: ${{ steps.changed-files-yaml.outputs.shellscripts_all_changed_files}}
      yaml_any_changed: ${{ steps.changed-files-yaml.outputs.yaml_any_changed }}
      yaml_all_changed_files: ${{ steps.changed-files-yaml.outputs.yaml_all_changed_files}}
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 1

    - name: Determine what files types have changed
      id: changed-files-yaml
      uses: tj-actions/changed-files@2f7c5bfce28377bc069a65ba478de0a74aa0ca32 # v46
      with:
        files_yaml: |
          actions:
          - .github/workflows/**
          ansible:
          - '**.yaml'
          - '**.yml'
          - '**.j2'
          - '!.github/**'
          - '!.pre-commit-config.yaml'
          - '.ansible-lint'
          packer:
          - '**.pkr.hcl'
          renovate:
          - .github/renovate.json
          - .github/renovate/**
          shellscripts:
          - '**.sh'
          yaml:
          - '**.yaml'

  commit-messages:
    if: ${{ github.event_name == 'pull_request' }}
    uses: ppat/github-workflows/.github/workflows/lint-commit-messages.yaml@main
    with:
      git_ref: ${{ github.head_ref }}
      fetch_depth: ${{ github.event.pull_request.commits }}
      from: ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }}
      to: ${{ github.event.pull_request.head.sha }}

  github-actions:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.actions_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-github-actions.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.actions_all_changed_files }}

  pre-commit:
    uses: ppat/github-workflows/.github/workflows/lint-pre-commit.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}

  renovate-config-check:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.renovate_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-renovate-config-check.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.renovate_all_changed_files }}

  shellcheck:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.shellscripts_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-shellcheck.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.shellscripts_all_changed_files }}

  yaml:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.yaml_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-yaml.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.yaml_all_changed_files }}

  ansible-lint:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.ansible_any_changed == 'true' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0

    - name: Set up python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt

    - name: Install python requirements
      run: python -m pip install -r requirements.txt

    - name: ansible-lint
      run: |
        ansible-lint -c .ansible-lint -i .ansible-lint-ignore --skip-list=yaml --force-color .

  packer:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.packer_any_changed == 'true' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0

    - name: Install packer
      env:
        # renovate: datasource=github-releases depName=hashicorp/packer
        PACKER_VERSION: "1.11.2"
      run: |
        wget --progress=dot:giga -c https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip -O /tmp/packer.zip
        unzip /tmp/packer.zip
        sudo install -o root -g root -m 0755 /tmp/packer /usr/local/sbin/packer
      working-directory: /tmp

    - name: packer-fmt
      run: |
        packer fmt -recursive -check .

    - name: Set up python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt

    - name: Cache pre-commit hooks
      uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4
      with:
        path: ~/.cache/pre-commit/
        key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install python requirements
      run: python -m pip install -r requirements.txt

    - name: Install pre-commit hooks
      run: pre-commit install --install-hooks --hook-type pre-commit

    - name: packer-validate
      run: |
        pre-commit run --all-files packer-validate
