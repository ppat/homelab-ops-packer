---
# yamllint disable rule:line-length
name: Build ubuntu image

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
    - 'ubuntu/**'
    - 'scripts/**'
    - '.github/workflows/build-ubuntu-image.yaml'
  workflow_dispatch:
    inputs:
      publish_artifact:
        description: 'Publish artifact to artifact store'
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ARTIFACT_DIR: /home/runner/.build/dist
  CACHE_DIR: /home/runner/.build/cache
  CONFIG_DIR: /home/runner/.build/config
  PACKER_CACHE_DIR: /home/runner/.build/cache/packer
  PACKER_LOG: 1

permissions:
  contents: read

jobs:
  build-ubuntu-image:
    strategy:
      fail-fast: false
      matrix:
        ubuntu_release: ["noble"]
        arch_plus_device_type: ["arm64+raspi", "amd64"]
    runs-on: ubuntu-24.04
    timeout-minutes: 180
    environment: release
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Set up python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: '3.13'

    - name: Install system packages
      run: |
        sudo apt-get update
        sudo apt-get install -yq --no-install-recommends binfmt-support parted qemu-utils qemu-user-static sshpass

    - name: Install packer
      env:
        # renovate: datasource=github-releases depName=hashicorp/packer
        PACKER_VERSION: "1.12.0"
      run: |
        wget --progress=dot:giga -c https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip -O /tmp/packer.zip
        unzip /tmp/packer.zip
        sudo install -o root -g root -m 0755 /tmp/packer /usr/local/sbin/packer
      working-directory: /tmp

    - name: Install ansible
      run: |
        # install globally as we need to run packer build with sudo, so installing just for current user won't work
        sudo pip install -r ./requirements.txt --ignore-installed

    - name: Prepare directories + parameters file
      env:
        UBUNTU_RELEASE: ${{ matrix.ubuntu_release }}
        ARCH_PLUS_DEVICE: ${{ matrix.arch_plus_device_type }}
      # yamllint disable-line rule:indentation
      run: |
        mkdir -p $ARTIFACT_DIR $CACHE_DIR $CONFIG_DIR $PACKER_CACHE_DIR

        ARCH="$(echo $ARCH_PLUS_DEVICE | cut -d+ -f1)"
        DEVICE_TYPE="$(echo $ARCH_PLUS_DEVICE | cut -d+ -f2)"

        if [[ "$ARCH" == "$DEVICE_TYPE" ]]; then
          DEVICE_TYPE="any"
        fi
        {
          echo "ubuntu_release = \"${UBUNTU_RELEASE}\""
          echo "target_architecture = \"${ARCH}\""
          echo "target_device = \"${DEVICE_TYPE}\""
          echo "artifact_dir = \"${ARTIFACT_DIR}\""
        } >> $CONFIG_DIR/source.pkrvars.hcl

    - name: Packer init
      run: |
        packer init .
      working-directory: ./ubuntu

    - name: Packer build
      run: |
        sudo --preserve-env packer build -var-file=$CONFIG_DIR/source.pkrvars.hcl .
      working-directory: ./ubuntu

    - name: Show artifacts
      run: |
        echo "------------------------------------ artifacts ------------------------------------"
        ls -alh $(find $ARTIFACT_DIR/ -type f)
        echo "-----------------------------------------------------------------------------------"
        echo
        echo "------------------------------------- manifest ------------------------------------"
        cat $(find $ARTIFACT_DIR/ -type f -name '*.json' | sort | head -1)
        echo
        echo "-----------------------------------------------------------------------------------"

    - name: Tailscale Connect
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.publish_artifact }}
      uses: tailscale/github-action@5d536117a7378beffcd6d8523ce73c50fa98684d # v3
      with:
        oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
        tags: tag:github-action-ci-runner
        # renovate: datasource=github-releases depName=tailscale/tailscale
        version: "1.84.2"

    - name: Tailscale Debug
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.publish_artifact }}
      run: |
        sudo -E tailscale netcheck --verbose 2>&1 | sed -f .output-filter
        echo
        sudo -E tailscale status 2>&1 | sed -f .output-filter
        echo
        sudo -E tailscale status --json --peers=false 2>&1 | sed -f .output-filter
        echo

    - name: Publish artifact
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.publish_artifact }}
      run: |
        MANIFEST_FILE="$(find $ARTIFACT_DIR/ -type f -name '*.json' | sort | head -1)"
        ARTIFACT_ROOT_DIR="$(cat $MANIFEST_FILE | jq -r .builds[].custom_data.artifact_path | cut -d/ -f1)"
        SRC="$ARTIFACT_DIR/$ARTIFACT_ROOT_DIR/"
        DEST="${{ secrets.ARTIFACT_SERVER_PATH }}/$ARTIFACT_ROOT_DIR"

        ./rsync-push.sh --username ${{ secrets.ARTIFACT_SERVER_USER }} --password ${{ secrets.ARTIFACT_SERVER_PASSWORD }} --host ${{ secrets.ARTIFACT_SERVER_HOST }} --source $SRC --dest $DEST
      working-directory: ./scripts/artifact

    - name: Tailscale Disconnect
      if: ${{ (success() || failure()) && github.event_name == 'workflow_dispatch' && inputs.publish_artifact }}
      run: sudo -E tailscale logout
